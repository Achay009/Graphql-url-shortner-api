# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "no parameter"
    steps:
      - run: echo << parameters.to >>

jobs:
  print_workflow_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          to: << pipeline.id >>
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo world
  print_env:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $USER_NAME
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
            name: "echo an env var that is part of our project"
            command: |
              touch ~/output.txt
              echo "text to output here" > ~/output.txt.
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  failure_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      # - welcome/run
      - print_workflow_id
      - print_hello
      - print_world:
          requires:
            - print_hello
      - print_env
      - save_hello_world_output
      - print_workflow_id
      - print_output_file:
          requires:
            - save_hello_world_output
      - failure_job